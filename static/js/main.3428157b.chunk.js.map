{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.js","Components/Section/Section.js","Components/Notification/Notification.js","Components/Statistics/Statistics.js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","name","Section","title","children","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","useState","setGood","setNeutral","setBad","countTotalFeedback","className","e","target","goodPercentage","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAYeA,EAZS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,mCACKD,EAAQE,KAAI,SAAAC,GACT,OACI,wBAAQC,KAAK,SAASC,QAASJ,EAAiBK,KAAMH,EAAtD,SAA+DA,UCIpEI,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,oCACI,6BAAKD,IACJC,MCJE,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACnC,OACI,mCACI,4BAAIA,MCDhB,IAYeC,EAZI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OAAOD,EAAQ,EAAK,cAACN,EAAD,CAAcC,QAAQ,sBACtC,gCACI,uCAAUE,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCkDGC,EArDH,WACV,MAAwBC,mBAAS,GAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOL,EAAP,KAAgBO,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOJ,EAAP,KAAYO,EAAZ,KAGMC,EAAqB,WACzB,OAAOV,EAAOC,EAAUC,GAwBxB,OACE,sBAAKS,UAAU,MAAf,UACE,cAAC,EAAD,CAAShB,MAAM,wBAAf,SACE,cAAC,EAAD,CACER,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAnBgB,SAACwB,GACzB,IAAQnB,EAASmB,EAAEC,OAAXpB,KACK,SAATA,GACFc,EAAQP,EAAO,GAEJ,YAATP,GACFe,EAAWP,EAAU,GAEV,QAATR,GACFgB,EAAOP,EAAM,QAaX,cAAC,EAAD,CAASP,MAAM,aAAf,SACE,cAAC,EAAD,CACEK,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOO,IACPN,mBAnC8B,WACtC,IAAMD,EAAQO,IACRI,EAAwB,IAAPd,EAAaG,EAEpC,OAAOY,KAAKC,MAAMF,GA+BUG,WC7ChCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.3428157b.chunk.js","sourcesContent":["const FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <>\r\n            {options.map(option => {\r\n                return (\r\n                    <button type='button' onClick={onLeaveFeedback} name={option}>{option}</button>\r\n                )\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FeedbackOptions;","const Section = ({ title, children }) => {\r\n    return (\r\n        <section>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Section;","export default function Notification({ message }) {\r\n    return (\r\n        <>\r\n            <p>{message}</p>\r\n        </>\r\n    );\r\n};","import Notification from '../Notification/Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return total < 1 ? (<Notification message=\"No feedback given\" />) : (\r\n        <div>\r\n            <p>Good: {good}</p>\r\n            <p>Neutral: {neutral}</p>\r\n            <p>Bad: {bad}</p>\r\n            <p>Total: {total}</p>\r\n            <p>Positive feedback: {positivePercentage}%</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Statistics;\r\n","import { useState } from 'react';\nimport './App.css';\nimport FeedbackOptions from './Components/FeedbackOptions/FeedbackOptions';\nimport Section from './Components/Section/Section';\nimport Statistics from './Components/Statistics/Statistics';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  \n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    const goodPercentage = good * 100 / total;\n\n    return Math.round(goodPercentage);\n  };\n  \n  const handleButtonClick = (e) => {\n    const { name } = e.target;\n    if (name === 'good') {\n      setGood(good + 1)\n    }\n    if (name === 'neutral') {\n      setNeutral(neutral + 1)\n    }\n    if (name === 'bad') {\n      setBad(bad + 1)\n    }\n  };\n  \n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={handleButtonClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        </Section>      \n      </div>\n    );\n  };\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}